// SYNTAX TEST "Packages/PackageDev/Package/Sublime Text Keymap/Sublime Key Map.sublime-syntax"

// <- source.json.sublimekeymap

// comment
// ^^^^^^^^ comment.line.double-slash - meta.keybinding.collection.sublimekeymap - meta.structure.array.json
[
// <- meta.structure.array.json punctuation.definition.array.begin.json

    { "keys": ["f5"], "command": "build" },
//  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.structure.array.json meta.keybinding.collection.sublimekeymap meta.structure.dictionary.json
//  ^ punctuation.definition.dictionary.begin.json punctuation.definition.keybinding.begin.sublimekeymap
//     ^^^^ string.quoted.double.json keyword.other.sublimekeymap
//    ^^^^^^ meta.structure.dictionary.key.json string.quoted.double.json
//          ^ - string.quoted.double.json - meta.structure.dictionary.key.json - meta.structure.dictionary.value.json
//            ^^^^^^ meta.structure.dictionary.value.json meta.structure.array.json - meta.structure.dictionary.value.json meta.structure.dictionary.value.json
//              ^^ entity.other.attribute-name.key.named.sublimekeymap
//             ^^^^ string.quoted.double.json
//                  ^ punctuation.separator.dictionary.pair.json - meta.structure.dictionary.value.json
//                     ^^^^^^^ keyword.other.sublimekeymap
//                    ^^^^^^^^^ meta.structure.dictionary.key.json string.quoted.double.json
//                               ^^^^^^^ meta.structure.dictionary.value.json string.quoted.double.json - meta.structure.dictionary.key.json - meta.structure.dictionary.value.json meta.structure.dictionary.value.json
//                                ^^^^^ support.constant.command-name.sublimekeymap
//                                       ^ punctuation.definition.dictionary.end.json punctuation.definition.keybinding.end.sublimekeymap
//                                       ^^^ - meta.structure.dictionary.value.json
//                                        ^ punctuation.separator.array.json - meta.structure.dictionary

    {
        "keys": ["ctrl+a"], "command": "test_command",
        "context":
        [
            { "key": "selector", "operand": "source.json.sublimekeymap" }
//             ^^^ support.function.sublimekeymap
//            ^^^^^ meta.structure.dictionary.key.json string.quoted.double.json
//                 ^ - string.quoted.double.json - meta.structure.dictionary.key.json - meta.structure.dictionary.value.json meta.structure.dictionary.value.json
//                    ^^^^^^^^ storage.type.context.key-value.sublimekeymap
//                   ^^^^^^^^^^ meta.structure.dictionary.value.json string.quoted.double.json
//                                ^^^^^^^ support.function.sublimekeymap
//                               ^^^^^^^^^ meta.structure.dictionary.key.json string.quoted.double.json
//                                        ^ - string.quoted.double.json - meta.structure.dictionary.key.json
//                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.structure.dictionary.value.json string.quoted.double.json - string.quoted.double.json string.quoted.double.json
//                                           ^^^^^^^^^^^^^^^^^^^^^^^^^ meta.scope-selector.sublimekeymap
//                                          ^ punctuation.definition.string.scope-selector.begin.sublimekeymap
//                                                 ^ punctuation.separator.scope-segments.scope-selector
//                                                      ^ punctuation.separator.scope-segments.scope-selector
//                                                                    ^ punctuation.definition.string.scope-selector.end.sublimekeymap
//                                                                     ^ - meta.scope-selector.sublimekeymap
//                                                                      ^ punctuation.definition.dictionary.end.json
        ]
//      ^ punctuation.definition.array.end.json
    },

    {
        "keys": ["ctrl+a"], "command": "test_command",
        "context":
        [
            { "key": "selector", "operator": "equal", "operand": "source.json.sublimekeymap" }
//             ^^^ support.function.sublimekeymap
//            ^^^^^ string.quoted.double.json
//                 ^ - string.quoted.double.json
//                    ^^^^^^^^ storage.type.context.key-value.sublimekeymap
//                   ^^^^^^^^^^ string.quoted.double.json
//                             ^ punctuation.separator.dictionary.pair.json
//                                ^^^^^^^^ support.function.sublimekeymap
//                               ^^^^^^^^^^ meta.structure.dictionary.key.json string.quoted.double.json
//                                            ^^^^^ keyword.operator.context.key-value.sublimekeymap
//                                                     ^^^^^^^ support.function.sublimekeymap
//                                                    ^^^^^^^^^ string.quoted.double.json
//                                                             ^ - string.quoted.double.json
//                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^ meta.scope-selector.sublimekeymap
//                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^ string.quoted.double.json
//                                                               ^ punctuation.definition.string.scope-selector.begin.sublimekeymap
//                                                                      ^ punctuation.separator.scope-segments.scope-selector
//                                                                           ^ punctuation.separator.scope-segments.scope-selector
//                                                                                         ^ punctuation.definition.string.scope-selector.end.sublimekeymap
        ]
    }

    {
//  ^^ invalid.illegal.expected-comma.inside-array.json
    ,{
        "keys": ["ctrl+i"],
        "command": "insert_snippet",
//                  ^^^^^^^^^^^^^^ string.quoted.double.json support.constant.command-name.sublimekeymap - meta.structure.dictionary.key.json
        "args": {
            "name": "Packages/XML/Snippets/long-tag.sublime-snippet"
//           ^^^^ meta.structure.dictionary.key.json string.quoted.double.json support.function.sublimekeymap
//                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.structure.dictionary.value.json string.quoted.double.json
        }, "args": { "contents": "$1" }
//      ^ meta.structure.dictionary.value.json punctuation.definition.dictionary.end.json
//       ^ punctuation.separator.dictionary.pair.json - meta.structure.dictionary.value.json
//          ^^^^ string.quoted.double.json keyword.other.sublimekeymap
//                 ^^^^^^^^^^^^^^^^^^^^ meta.structure.dictionary.value.json
//                                     ^ - meta.structure.dictionary.value.json
//                   ^^^^^^^^^^ meta.structure.dictionary.key.json string.quoted.double.json
//                    ^^^^^^^^ support.function.sublimekeymap
//                                ^ keyword.other.block.start.sublimesnippetraw
//                               ^^^^ string.quoted.double.json - meta.structure.dictionary.key.json
//                                  ^ punctuation.definition.snippet.end.sublimekeymap
    }
//  ^ punctuation.definition.dictionary.end.json - meta.structure.dictionary.value.json

    , {"keyz": ["test"], "command": "blah", "keys": ["a", "b"], "keys": [a, "f20", "f21"]}
//      ^^^^ support.function.sublimekeymap
//     ^^^^^^ meta.structure.dictionary.key.json string.quoted.double.json
//               ^^^^ string.quoted.double.json
//                    ^ punctuation.definition.array.end.json
//                     ^ punctuation.separator.dictionary.pair.json
//                        ^^^^^^^ string.quoted.double.json keyword.other.sublimekeymap
//                                           ^^^^ string.quoted.double.json keyword.other.sublimekeymap
//                                                   ^^^ string.quoted.double.json
//                                                      ^ punctuation.separator.array.json
//                                                        ^^^ string.quoted.double.json
//                                                                       ^ invalid.illegal.expected-string-or-end-of-array.sublime-keymap
//                                                                           ^^^ string.quoted.double.json entity.other.attribute-name.key.named.sublimekeymap
//                                                                                  ^^^ string.quoted.double.json invalid.illegal.key.sublimekeymap
//                                                                                      ^ punctuation.definition.array.end.json

, { "keys": ["\"", " ", "space"], "command": "insert_snippet", "args": {"contents": "\"$0\""} },
//           ^^^^ string.quoted.double.json
//            ^ constant.character.escape.json
//                  ^ string.quoted.double.json string.key.literal.sublimekeymap - invalid.illegal.key.sublimekeymap
//                       ^^^^^ string.quoted.double.json entity.other.attribute-name.key.named.sublimekeymap
//                                                                                  ^^^^^^^^ string.quoted.double.json
//                                                                                  ^ punctuation.definition.string.begin.json punctuation.definition.snippet.begin.sublimekeymap
//                                                                                   ^ constant.character.escape.json
//                                                                                    ^ - punctuation
//                                                                                       ^ constant.character.escape.json
//                                                                                        ^ - punctuation
//                                                                                         ^ punctuation.definition.string.end.json punctuation.definition.snippet.end.sublimekeymap

    { "keys": ["alt+o", "  "], "command": "switch_file", "args": {"extensions": ["cpp", "cxx", "cc", "c", "hpp", "hxx", "hh", "h", "ipp", "inl", "m", "mm"]} },
//                       ^^ string.quoted.double.json invalid.illegal.key.sublimekeymap
//                                                                              ^ punctuation.definition.array.begin.json
//                                                                               ^^^^^ string.quoted.double.json - support.function - meta.structure.dictionary.key.json
//                                                                                    ^ punctuation.separator.array.json
//                                                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.structure.dictionary.value.json meta.structure.array.json
//                                                                                                                                                         ^ punctuation.definition.dictionary.end.json

    { "keys": ["tab"], "command": "insert_best_completion", "args": {"default": "\t", "exact": false, }, // trailing commas before closing dictionary punctuation is allowed
//  ^ punctuation.definition.dictionary.begin.json punctuation.definition.keybinding.begin.sublimekeymap
//                                                                    ^^^^^^^ string.quoted.double.json support.function.sublimekeymap
//                                                                               ^^ string.quoted.double.json constant.character.escape.json
//                                                                                  ^ punctuation.separator.dictionary.pair.json
//                                                                                     ^^^^^ string.quoted.double.json support.function.sublimekeymap
//                                                                                             ^^^^^ constant.language.json
//                                                                                                  ^ punctuation.separator.dictionary.pair.json
//                                                                                                    ^ punctuation.definition.dictionary.end.json
        "context":
        [
            { "key": "setting.tab_completion", "operator": "equal", "operand": true },
//                    ^^^^^^^^^^^^^^^^^^^^^^ string.quoted.double.json storage.type.context.key-value.sublimekeymap - meta.structure.dictionary.key.json
//                                             ^^^^^^^^^^ meta.structure.dictionary.key.json string.quoted.double.json
//                                                          ^^^^^ string.quoted.double.json keyword.operator.context.key-value.sublimekeymap - meta.structure.dictionary.key.json
            { "key": "preceding_text", "operator": "not_regex_match", "operand": ".*\\b[0-9]+$", "match_all": true },
//                    ^^^^^^^^^^^^^^ string.quoted.double.json storage.type.context.key-value.sublimekeymap
//                                                  ^^^^^^^^^^^^^^^ meta.structure.dictionary.value.json string.quoted.double.json keyword.operator.context.key-value.sublimekeymap - meta.structure.dictionary.key.json
//                                                                               ^^^^^^^^^^^^^^ meta.structure.dictionary.value.json string.quoted.double.json
//                                                                                ^ keyword
//                                                                                  ^^^ entity.other.attribute-name.anchor
            { "key": "preceding_text", "operator": "equal" },
        ,] // trailing commas before closing array punctuation is allowed
//      ^ punctuation.separator.array.json
//       ^ punctuation.definition.array.end.json
    },
//  ^ punctuation.definition.dictionary.end.json punctuation.definition.keybinding.end.sublimekeymap

    { "keys": ["<character>"], "command": "text_and_align_table", "context":
//               ^^^^^^^^^ string.quoted.double.json entity.other.attribute-name.key.captured.sublimekeymap
//                                                                 ^^^^^^^ string.quoted.double.json keyword.other.sublimekeymap
// this is a comment
// ^^^^^^^^^^^^^^^^^^ comment.line.double-slash
        [
//      ^ punctuation.definition.array.begin.json
            { "key": "setting.enable_table_editor", "operator": "equal", "operand": true, "match_all": true },
            { "key": "preceding_text", "operator": "regex_contains", "operand": "^\\s*\\|", "match_all": true },
            { "key": "following_text", "operator": "regex_match", "operand": "\\s*\\|.*$", "match_all": true },
            { "key": "settingabc" },
//                    ^^^^^^^^^^ string.quoted.double.json - storage.type.context.key-value.sublimekeymap
            { "key": "setting.abc.def_ghi" },
//                    ^^^^^^^^^^^^^^^^^^^ string.quoted.double.json storage.type.context.key-value.sublimekeymap
        ]
    },

/**/

// <- -comment
]
  ,[]//fgfg
// <- - invalid.illegal
//^^^ invalid.illegal.expected-comment-or-eof.sublimekeymap
//   ^^ comment.line.double-slash - invalid.illegal
